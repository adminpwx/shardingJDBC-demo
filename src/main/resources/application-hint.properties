# 配置真实数据源
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
# 使用druid数据源时，原有的shardingSphere配置中,jdbc-url要修改为url,useSSL=false
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/test-0?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=pwx12345

# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/test-1?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=pwx12345


# 配置 t_city 表规则
spring.shardingsphere.rules.sharding.tables.t_city.actual-data-nodes=ds$->{0..1}.t_city

# 分布式序列策略配置
spring.shardingsphere.rules.sharding.tables.t_city.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_city.key-generate-strategy.key-generator-name=SNOWFLAKE

# 用于Hint 的分片策略
spring.shardingsphere.rules.sharding.tables.t_city.database-strategy.hint.sharding-algorithm-name=com.pwx.hint.MyHintShardingAlgorithm